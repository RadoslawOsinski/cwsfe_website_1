apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'base'
apply plugin: 'sonar-runner'
apply plugin: 'jacoco'

version = '1.0'
group = "eu.com.cwsfe"
archivesBaseName = 'cwsfe_website'
compileJava.options.encoding = 'UTF-8'

idea {
    module {
        sourceDirs += file('src/main/java')
        sourceDirs += file('src/main/resources')
        testSourceDirs += file('src/test/java')
        testSourceDirs += file('src/test/resources')
        excludeDirs += file('target')
        excludeDirs += file('build')
        excludeDirs += file('out')
        excludeDirs += file('.gradle')
    }
}

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/libs-release" }
    maven { url "http://repo.springsource.org/plugins-release" }
    maven { url "http://repo.spring.io/milestone" }  // for AspectJ 1.8.0.M1
    maven { url "https://repository.apache.org/content/repositories/releases" }  // tomcat 8
    maven { url "https://maven.java.net/content/repositories/releases" }  // javax.websocket, tyrus
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }  // javax.cache
}

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    options.encoding = 'UTF-8'
    options.compilerArgs = ['-Xlint', '-Xlint:-serial', '-Xlint:-path']
}

dependencies {
    providedCompile group: 'javax.servlet.jsp', name: 'jsp-api', version: '2.2.1-b03'
    providedCompile group: 'javax.servlet', name: 'servlet-api', version: '2.5'
    //providedCompile group: 'org.jboss.spec.javax.jms', name: 'jboss-jms-api_2.0_spec', version: '1.0.0.Final'
    compile project(':cwsfe_cms_website')
    testCompile group: 'org.springframework', name: 'spring-test', version: '4.0.6.RELEASE'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task yuiMinimizeCssFiles {
    FileTree tree = fileTree(dir: 'src')
    tree.include '**/*.css'
    tree.exclude '**/*min.css'
    tree.each { File file -> minimizeCssFile(file); }
}

//java -jar yuicompressor-x.y.z.jar myfile.js -o myfile-min.js --charset utf-8
def minimizeCssFile(File file) {
    String minimizedFileName = (file.getAbsolutePath().substring(0, file.getAbsolutePath().length() - 4) + '-min.css').toString();
    javaexec {
        main = "-jar";
        args = [
                '../tools/yuicompressor-2.4.8.jar',
                file.getAbsolutePath(),
                '-o',
                minimizedFileName,
                '--charset',
                'utf-8'
        ].toList()
    };
}

war {
    it.dependsOn yuiMinimizeCssFiles
    from (project(':cwsfe_cms_website').file('src/main/webapp/'))
}

sonarRunner {
    def props = new Properties()
    new File("sensitive_data.properties").withInputStream {
        stream -> props.load(stream)
    }
    sonarProperties {
        property 'toolVersion', '2.4'
        property "sonar.host.url", props["sonar.host.url"]
        property "sonar.jdbc.url", props["sonar.jdbc.url"]
        property "sonar.jdbc.username", props["sonar.jdbc.username"]
        property "sonar.jdbc.password", props["sonar.jdbc.password"]
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.login", props["sonar.login"]
        property "sonar.password", props["sonar.password"]
    }
}

jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
}
